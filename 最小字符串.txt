/*Problem Description
Given a sequence a[1],a[2],a[3]......a[n], 
your job is to calculate the max sum of a sub-sequence.
For example, given (6,-1,5,4,-7), the max sum in this sequence is 6 + (-1) + 5 + 4 = 14.
 Input
The first line of the input contains an integer T(1<=T<=20) 
which means the number of test cases. 
Then T lines follow, each line starts with a number N(1<=N<=100000), 
then N integers followed(all the integers are between -1000 and 1000).

Output
For each test case, you should output two lines. 
The first line is "Case #:", # means the number of the test case. 
The second line contains three integers, the Max Sum in the sequence,
the start position of the sub-sequence, the end position of the sub-sequence.
If there are more than one result, output the first one.
Output a blank line between two cases.*/


#include<iostream>
#include<cstdio>
#include<algorithm>
#include<string>
#include<string.h>
#include<map>
#include<list>
#include<vector>
using namespace std;
int ini[10008];



int main()
{
	int j, i, k, n, m, t;
	int a[100002];
	cin >> t;
	for (j = 1; j <= t; j++)
	{
		cin >> n;
		for (i = 0; i<n; i++)
		{
			cin >> a[i];
		}
		int sum = 0, maxsum = -1001, first = 0, last = 0, temp = 1;		
		for (i = 0; i<n; i++)
		{
			sum = a[i] + sum;
			if (sum > maxsum)
			{
				maxsum = sum; first = temp; last = i + 1;
			}
			if (sum < 0)
			{
				sum = 0; temp = i + 2;
			}
		}
		cout << "Case " << j << ":" << endl;
		cout << maxsum << " " << first << " " << last << endl;
		if (j != t)
		{
			cout<< endl;
		}
	}

	return 0;
}
